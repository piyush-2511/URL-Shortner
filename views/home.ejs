<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>URL Shortener</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f7f9fc;
      color: #333;
    }
    h1 {
      color: #2c3e50;
      text-align: center;
      margin-bottom: 30px;
    }
    .container {
      background-color: white;
      border-radius: 10px;
      padding: 30px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .form-group {
      margin-bottom: 20px;
    }
    input[type="text"] {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 16px;
      box-sizing: border-box;
    }
    button {
      background-color: #3498db;
      color: white;
      border: none;
      padding: 12px 20px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      transition: background-color 0.3s;
    }
    button:hover {
      background-color: #2980b9;
    }
    .result {
      margin-top: 20px;
      padding: 15px;
      background-color: #f1f8ff;
      border-radius: 4px;
      border-left: 4px solid #3498db;
    }
    .result a {
      color: #3498db;
      font-weight: bold;
      text-decoration: none;
    }
    .result a:hover {
      text-decoration: underline;
    }
    .copy-btn {
      background-color: #2ecc71;
      font-size: 14px;
      padding: 8px 12px;
      margin-left: 10px;
    }
    .copy-btn:hover {
      background-color: #27ae60;
    }
    .stats {
      margin-top: 30px;
    }
    .error {
      color: #e74c3c;
      margin-top: 10px;
    }
    .loading {
      text-align: center;
      margin: 20px 0;
      display: none;
    }
    .spinner {
      border: 4px solid rgba(0, 0, 0, 0.1);
      border-radius: 50%;
      border-top: 4px solid #3498db;
      width: 30px;
      height: 30px;
      animation: spin 1s linear infinite;
      margin: 0 auto;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>URL Shortener</h1>
    
    <form id="urlForm" action="/url" method="post">
      <div class="form-group">
        <input type="text" name="url" id="urlInput" placeholder="Enter a long URL" required>
      </div>
      <button type="submit">Shorten URL</button>
    </form>
    
    <div id="error" class="error"></div>
    
    <div id="loading" class="loading">
      <div class="spinner"></div>
      <p>Generating short URL...</p>
    </div>
    
    <% if (id) { %>
      <div class="result">
        <p>Your shortened URL:</p>
        <div>
          <a href="/url/<%= id %>" id="shortUrl">https://<%= id %>/</a>
          <button class="copy-btn" onclick="copyToClipboard()">Copy</button>
        </div>
        <p id="copyMessage"></p>
      </div>
    <% } %>
    
    <div class="stats">
      <h3>Recent URLs</h3>
      <ul id="recentUrls">
        <!-- Recent URLs will be displayed here -->
      </ul>
    </div>
  </div>

  <script>
    // Function to validate URL
    function isValidUrl(url) {
      try {
        new URL(url);
        return true;
      } catch (e) {
        return false;
      }
    }

    // Form submission handler
    document.getElementById('urlForm').addEventListener('submit', function(e) {
      const urlInput = document.getElementById('urlInput').value.trim();
      const errorDiv = document.getElementById('error');
      
      if (!urlInput) {
        e.preventDefault();
        errorDiv.textContent = 'Please enter a URL';
        return;
      }
      
      if (!isValidUrl(urlInput)) {
        e.preventDefault();
        errorDiv.textContent = 'Please enter a valid URL (include http:// or https://)';
        return;
      }
      
      // Show loading spinner
      document.getElementById('loading').style.display = 'block';
      errorDiv.textContent = '';
      
      // Save to recent URLs in localStorage
      if (window.localStorage) {
        const recentUrls = JSON.parse(localStorage.getItem('recentUrls') || '[]');
        if (recentUrls.findIndex(item => item.longUrl === urlInput) === -1) {
          recentUrls.unshift({
            longUrl: urlInput,
            timestamp: new Date().toISOString()
          });
          localStorage.setItem('recentUrls', JSON.stringify(recentUrls.slice(0, 5)));
        }
      }
    });

    // Copy to clipboard function
    function copyToClipboard() {
      const shortUrl = document.getElementById('shortUrl');
      const copyMessage = document.getElementById('copyMessage');
      
      const fullUrl = window.location.origin + shortUrl.getAttribute('href');
      
      navigator.clipboard.writeText(fullUrl).then(function() {
        copyMessage.textContent = 'URL copied to clipboard!';
        setTimeout(() => {
          copyMessage.textContent = '';
        }, 2000);
      }, function() {
        copyMessage.textContent = 'Failed to copy URL';
      });
    }

    // Load recent URLs from localStorage
    window.addEventListener('DOMContentLoaded', function() {
      if (window.localStorage) {
        const recentUrls = JSON.parse(localStorage.getItem('recentUrls') || '[]');
        const recentUrlsList = document.getElementById('recentUrls');
        
        if (recentUrls.length === 0) {
          recentUrlsList.innerHTML = '<li>No recent URLs</li>';
          return;
        }
        
        recentUrlsList.innerHTML = recentUrls.map(item => {
          const date = new Date(item.timestamp);
          const formattedDate = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
          return `<li>${item.longUrl} <small>(${formattedDate})</small></li>`;
        }).join('');
      }
    });
  </script>
</body>
</html>